/*dnd*/

.master-list ul[dnd-list],
.master-list ul[dnd-list] > li {
    position: relative;
}

/***************************** Dropzone Styling *****************************/

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.master-list .dropzone ul[dnd-list] {
    min-height: 59px;
    padding-left: 0;
    /*margin: 0px;
    padding-left: 0px;*/
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.master-list .dropzone li {
    display: block;
}

/**
 * Reduce opacity of elements during the drag operation. This allows the user
 * to see where he is dropping his element, even if the element is huge. The
 * .dndDragging class is automatically set during the drag operation.
 */

.master-list .dropzone .dndDragging {
    opacity: 0.7;
}

/**
 * The dndDraggingSource class will be applied to the source element of a drag
 * operation. It makes sense to hide it to give the user the feeling that he's
 * actually moving it. Note that the source element has also .dndDragging class.
 */
.master-list .dropzone .dndDraggingSource {
    /*display: none;*/
    opacity: 0.7;
}

/**
 * An element with .dndPlaceholder class will be added as child of the dnd-list
 * while the user is dragging over it.
 */
.master-list .dropzone .dndPlaceholder {
    background-color: #d6d6d6 !important;
    min-height: 59px;
    display: block;
    position: relative;
}


