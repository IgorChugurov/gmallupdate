{"version":3,"sources":["../../babel/components/acync/async.js"],"names":["api","Api","getUser","user","getFriends","id","friends","getPhoto","photo","console","log","asyncAwaitIsYourNewBestFriend","name","Promise","resolve","reject","setTimeout","userId","slice","Error"],"mappings":";;;;;uEA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACUA,2BADV,GACgB,IAAIC,GAAJ,EADhB;AAAA;AAAA,+BAEuBD,IAAIE,OAAJ,EAFvB;;AAAA;AAEUC,4BAFV;AAAA;AAAA,+BAG0BH,IAAII,UAAJ,CAAeD,KAAKE,EAApB,CAH1B;;AAAA;AAGUC,+BAHV;AAAA;AAAA,+BAIwBN,IAAIO,QAAJ,CAAaJ,KAAKE,EAAlB,CAJxB;;AAAA;AAIUG,6BAJV;;AAKIC,gCAAQC,GAAR,CAAY,+BAAZ,EAA6C,EAAEP,UAAF,EAAQG,gBAAR,EAAiBE,YAAjB,EAA7C;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeG,6B;;;;;;;;;IA/BTV,G;AACF,mBAAe;AAAA;;AACX,aAAKE,IAAL,GAAY,EAAEE,IAAI,CAAN,EAASO,MAAM,MAAf,EAAZ;AACA,aAAKN,OAAL,GAAe,CAAE,KAAKH,IAAP,EAAa,KAAKA,IAAlB,EAAwB,KAAKA,IAA7B,CAAf;AACA,aAAKK,KAAL,GAAa,kBAAb;AACH;;;;kCAEU;AAAA;;AACP,mBAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAW;AAAA,2BAAMF,QAAQ,MAAKX,IAAb,CAAN;AAAA,iBAAX,EAAqC,GAArC;AACH,aAFM,CAAP;AAGH;;;mCAEWc,M,EAAQ;AAAA;;AAChB,mBAAO,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAW;AAAA,2BAAMF,QAAQ,OAAKR,OAAL,CAAaY,KAAb,EAAR,CAAN;AAAA,iBAAX,EAAgD,GAAhD;AACH,aAFM,CAAP;AAGH;;;iCAESD,M,EAAQ;AAAA;;AACd,mBAAO,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAW;AAAA,2BAAMF,QAAQ,OAAKN,KAAb,CAAN;AAAA,iBAAX,EAAsC,GAAtC;AACH,aAFM,CAAP;AAGH;;;qCAEa;AACV,mBAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,2BAAW;AAAA,2BAAMD,OAAO,IAAII,KAAJ,CAAU,mBAAV,CAAP,CAAN;AAAA,iBAAX,EAAyD,GAAzD;AACH,aAFM,CAAP;AAGH;;;;;;AASLR","file":"async.js","sourcesContent":["class Api {\r\n    constructor () {\r\n        this.user = { id: 1, name: 'test' }\r\n        this.friends = [ this.user, this.user, this.user ]\r\n        this.photo = 'not a real photo'\r\n    }\r\n\r\n    getUser () {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(this.user), 200)\r\n        })\r\n    }\r\n\r\n    getFriends (userId) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(this.friends.slice()), 200)\r\n        })\r\n    }\r\n\r\n    getPhoto (userId) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(this.photo), 200)\r\n        })\r\n    }\r\n\r\n    throwError () {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => reject(new Error('Intentional Error')), 200)\r\n        })\r\n    }\r\n}\r\nasync function asyncAwaitIsYourNewBestFriend () {\r\n    const api = new Api()\r\n    const user = await api.getUser()\r\n    const friends = await api.getFriends(user.id)\r\n    const photo = await api.getPhoto(user.id)\r\n    console.log('asyncAwaitIsYourNewBestFriend', { user, friends, photo })\r\n}\r\nasyncAwaitIsYourNewBestFriend ()\r\n\r\n\r\n"]}